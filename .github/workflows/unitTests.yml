# This is a basic workflow to help you get started with Actions

name: ${POD_NAME}-unit-tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, macOS]


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Remove cache directories
        working-directory: ./hotstarx-ios-mobile
        run: rm -rf _LocalBinaryPods; rm -rf _Prebuild; rm -rf Pods;

      - name: Install bundler and prebuild
        working-directory: ./hotstarx-ios-mobile
        run: bundle exec pod binary prebuild

      - name: Pod Install
        working-directory: ./${POD_NAME}/Example
        run: pod install

      # Runs a set of commands using the runners shell
      - name: Run unit tests
        working-directory: ./hotstarx-ios-mobile
        run: xcodebuild -workspace ../${POD_NAME}/Example/${POD_NAME}.xcworkspace -scheme ${POD_NAME}-Example -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 11' test | bundle exec xcpretty
